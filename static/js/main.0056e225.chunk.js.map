{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","lastname","email","message","sent","handleName","e","setState","target","value","handleLastName","handleEmail","handleMessage","formSubmit","preventDefault","data","axios","post","then","res","resetForm","catch","console","log","setTimeout","className","htmlFor","type","placeholder","this","onChange","id","cols","rows","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGqBA,E,4MAEjBC,MAAO,CACHC,KAAK,GACLC,SAAS,GACTC,MAAM,GACNC,QAAQ,GACRC,MAAK,G,EAGTC,WAAW,SAACC,GACR,EAAKC,SAAS,CACVP,KAAKM,EAAEE,OAAOC,S,EAItBC,eAAe,SAACJ,GACZ,EAAKC,SAAS,CACVN,SAASK,EAAEE,OAAOC,S,EAK1BE,YAAY,SAACL,GACT,EAAKC,SAAS,CACVL,MAAMI,EAAEE,OAAOC,S,EAKvBG,cAAc,SAACN,GACX,EAAKC,SAAS,CACVJ,QAAQG,EAAEE,OAAOC,S,EAMzBI,WAAY,SAACP,GACTA,EAAEQ,iBACF,IAAIC,EAAM,CACNf,KAAK,EAAKD,MAAMC,KAChBC,SAAS,EAAKF,MAAME,SACpBC,MAAM,EAAKH,MAAMG,MACjBC,QAAQ,EAAKJ,MAAMI,SAEvBa,IAAMC,KAAK,aAAcF,GACxBG,MAAK,SAAAC,GACF,EAAKZ,SAAS,CACVH,MAAK,GACP,EAAKgB,gBACRC,OAAM,WACLC,QAAQC,IAAI,wB,EAKpBH,UAAW,WACP,EAAKb,SAAS,CACVP,KAAK,GACLC,SAAS,GACTC,MAAM,GACNC,QAAQ,KAEZqB,YAAW,WACP,EAAKjB,SAAS,CACVH,MAAK,MAEX,M,4CAIN,WACI,OACI,qBAAKqB,UAAU,YAAf,SACI,iCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OACZ3B,KAAK,OACLyB,UAAU,OACVG,YAAY,WACZnB,MAAOoB,KAAK9B,MAAMC,KAClB8B,SAAUD,KAAKxB,gBAGnB,sBAAKoB,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OACZ3B,KAAK,WACLyB,UAAU,WACVG,YAAY,gBACZnB,MAAOoB,KAAK9B,MAAME,SAClB6B,SAAUD,KAAKnB,oBAGnB,sBAAKe,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QACZ3B,KAAK,QACLyB,UAAU,QACVG,YAAY,YACZnB,MAAOoB,KAAK9B,MAAMG,MAClB4B,SAAUD,KAAKlB,iBAGnB,sBAAKc,UAAU,sBAAf,UACI,uBAAOC,QAAQ,UAAf,qBACA,0BAAU1B,KAAK,UACf+B,GAAG,GACHC,KAAK,KACLC,KAAK,IACLL,YAAY,mBACZnB,MAAOoB,KAAK9B,MAAMI,QAClB2B,SAAUD,KAAKjB,mBAGnB,qBAAKa,UAAU,MAAf,oCAEA,qBAAKA,UAAU,MAAf,SACI,wBAAQE,KAAK,SAAb,+B,GAxHUO,aCSnBC,MATf,WACE,OACE,qBAAKV,UAAU,MAAf,SAEA,cAAC,EAAD,OCKWW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0056e225.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Form extends Component {\r\n\r\n    state= {\r\n        name:'',\r\n        lastname:'',\r\n        email:'',\r\n        message:'',\r\n        sent:false\r\n    }\r\n    //handle inputs\r\n    handleName=(e)=>{\r\n        this.setState({\r\n            name:e.target.value\r\n        })\r\n    }\r\n\r\n    handleLastName=(e)=>{\r\n        this.setState({\r\n            lastname:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleEmail=(e)=>{\r\n        this.setState({\r\n            email:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleMessage=(e)=>{\r\n        this.setState({\r\n            message:e.target.value\r\n        })\r\n    }\r\n\r\n    //end of handle input \r\n\r\n    formSubmit= (e)=>{\r\n        e.preventDefault();\r\n        let data ={\r\n            name:this.state.name,\r\n            lastname:this.state.lastname,\r\n            email:this.state.email,\r\n            message:this.state.message\r\n        }\r\n        axios.post('/api/forma', data)\r\n        .then(res=>{\r\n            this.setState({\r\n                sent:true,\r\n            },this.resetForm())\r\n        }).catch(()=>{\r\n            console.log(\"message not sent\");\r\n        })\r\n    }\r\n\r\n    // for reset form \r\n    resetForm =() =>{\r\n        this.setState({\r\n            name:'',\r\n            lastname:'',\r\n            email:'',\r\n            message:''\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                sent:false,\r\n            })\r\n        },3000)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form >\r\n                    <div className=\"singleItem\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" \r\n                        name=\"name\" \r\n                        className=\"name\" \r\n                        placeholder=\"name....\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleName}/>\r\n                    </div>\r\n\r\n                    <div className=\"singleItem\">\r\n                        <label htmlFor=\"lastname\">Last Name</label>\r\n                        <input type=\"text\" \r\n                        name=\"lastname\" \r\n                        className=\"lastname\" \r\n                        placeholder=\"Last name....\"\r\n                        value={this.state.lastname}\r\n                        onChange={this.handleLastName}/>\r\n                    </div>\r\n\r\n                    <div className=\"singleItem\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" \r\n                        name=\"email\" \r\n                        className=\"email\" \r\n                        placeholder=\"email....\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleEmail}/>\r\n                    </div>\r\n\r\n                    <div className=\"textArea singleItem\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea name=\"message\" \r\n                        id=\"\" \r\n                        cols=\"30\" \r\n                        rows=\"5\" \r\n                        placeholder=\"your message ...\" \r\n                        value={this.state.message}\r\n                        onChange={this.handleMessage}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"msg\">Message has been sent.</div>\r\n\r\n                    <div className=\"btn\">\r\n                        <button type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n    <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}